/* ========================================================================
 *
 * ======================================================================== */
Box.define('Demo.upload.indexDetail', {

    extend: 'Box.Component',

    templates: {
        main: [
            '<div style="margin-left: 30px;margin-top: 50px" class="row">'+
            ' <div class="importBody col-md-4" style="height: 500px;"></div>'+
                '<div class="col-md-8"> '+
                '<button class="button k-button k-primary">查看源代码</button>'+
                '<div class="text"></div></div> '+
                '</div>'
        ]
    },

    uploadUrl: '/api/Trade/ImportTradeContracts',

    elements: {
        importBody: '.importBody',
        button:'.button',
        text:'.text'
    },
    events:{
      'click button':'checkFile'
    },
    // contentElements: {
    //     selectBtn: '.selectBtn'
    // },

    buttons: [
        {
            name: 'startUpload',//按钮名字,必须要唯一
            text: '导入数据',//按钮显示的名字
            theme: "k-info", //k-info,k-info,k-success,k-warning,k-danger
            disable: true,//是否启用按钮
            display: false, //是否显示按钮
            handler: '_startUpload'//点击按钮的处理函数
        },
        {
            name: 'clearFiles',//按钮名字,必须要唯一
            text: '清空队列',//按钮显示的名字
            theme: "k-danger", //k-info,k-info,k-success,k-warning,k-danger
            disable: true,//是否启用按钮
            display: true, //是否显示按钮
            handler: '_clearFiles'//点击按钮的处理函数
        }
    ],

    setup: function () {
        this._initFileUpload();

    },

    _startUpload: function () {
        this.upload.fnStartUpload();
    },

    _clearFiles: function () {
        this.upload.fnRemoveAllFiles();
    },

    _initFileUpload: function () {

        var me = this;
        this.upload = new Box.Upload({
            uploadUrl: this.uploadUrl,
            uploadAutoProcessQueue: true,
            uploadAcceptedFiles: '.xlsx,.xls',
            renderTo: this.el.importBody
        });

        var hasError = false;

        this.upload.on('addedfile', function () {
            me.fnEnableBtn('startUpload');
            me.fnEnableBtn('clearFiles');
            hasError = false;
        });
        this.upload.on('fileEmpty', function () {
            me.fnDisableBtn('startUpload');
            me.fnDisableBtn('clearFiles');
            hasError = false;
        });
        this.upload.on('sending', function () {
            me.fnDisableBtn('startUpload');
            me.fnDisableBtn('clearFiles');
        });
        this.upload.on('error', function () {
            hasError = true;
        });
        this.upload.on('queuecomplete', function () {
            if (hasError) {
                Box.Notify.error('部分文件上传出现错误!');
            } else {
                Box.Notify.success('全部文件上传成功!');
            }
            me.fnDisableBtn('startUpload');
            me.fnEnableBtn('clearFiles');
        });
    },
    checkFile:function () {
        var me = this;
        var myCodeMirror = CodeMirror(this.el.text[0], {
            // value: "function myScript(){return 100;}\n",
            mode: "javascript",
            theme: 'dracula'
        });
        Box.require('text!app/print/index.js', function (text) {
            myCodeMirror.setValue(text)
        });
        this.el.button.attr('disabled','disabled');
    }

});
